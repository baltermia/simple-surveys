// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleSurveys.Shared.Models;

namespace SimpleSurveys.Shared.Migrations
{
    [DbContext(typeof(SimpleSurveysContext))]
    partial class SimpleSurveysContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Step", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("SurveyID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SurveyID");

                    b.ToTable("Steps");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Step");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.StepResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StepID")
                        .HasColumnType("int");

                    b.Property<int>("SurveyResultID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StepID");

                    b.HasIndex("SurveyResultID");

                    b.ToTable("StepResults");

                    b.HasDiscriminator<string>("Discriminator").HasValue("StepResult");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.StepResult_Value", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckResultID")
                        .HasColumnType("int");

                    b.Property<int?>("DropDownResultID")
                        .HasColumnType("int");

                    b.Property<int>("StepResultID")
                        .HasColumnType("int");

                    b.Property<int>("ValueID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CheckResultID");

                    b.HasIndex("DropDownResultID");

                    b.HasIndex("StepResultID");

                    b.HasIndex("ValueID");

                    b.ToTable("StepResult_Values");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Step_Value", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckID")
                        .HasColumnType("int");

                    b.Property<int?>("DropDownID")
                        .HasColumnType("int");

                    b.Property<int?>("RadioID")
                        .HasColumnType("int");

                    b.Property<int>("StepID")
                        .HasColumnType("int");

                    b.Property<int>("ValueID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CheckID");

                    b.HasIndex("DropDownID");

                    b.HasIndex("RadioID");

                    b.HasIndex("StepID");

                    b.HasIndex("ValueID");

                    b.ToTable("Step_Values");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Survey", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosedSince")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Open")
                        .HasColumnType("bit");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<int>("SurveyID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.SurveyResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Submitted")
                        .HasColumnType("datetime2");

                    b.Property<int>("SurveyID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SurveyID");

                    b.ToTable("SurveyResults");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Value", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Check", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.Step");

                    b.HasDiscriminator().HasValue("Check");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Date", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.Step");

                    b.Property<DateTime?>("Default")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Default");

                    b.Property<string>("Placeholder")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Date_Placeholder");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Date");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.DropDown", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.Step");

                    b.Property<int?>("Default")
                        .HasColumnType("int")
                        .HasColumnName("DropDown_Default");

                    b.Property<bool>("MultiSelect")
                        .HasColumnType("bit");

                    b.Property<string>("Placeholder")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DropDown_Placeholder");

                    b.HasDiscriminator().HasValue("DropDown");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Number", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.Step");

                    b.Property<int?>("Default")
                        .HasColumnType("int");

                    b.Property<string>("Placeholder")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Number");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Radio", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.Step");

                    b.HasDiscriminator().HasValue("Radio");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Range", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.Step");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Range");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Text", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.Step");

                    b.HasDiscriminator().HasValue("Text");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.YesNo", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.Step");

                    b.HasDiscriminator().HasValue("YesNo");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.CheckResult", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.StepResult");

                    b.HasDiscriminator().HasValue("CheckResult");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.DateResult", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.StepResult");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("DateResult");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.DropDownResult", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.StepResult");

                    b.HasDiscriminator().HasValue("DropDownResult");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.NumberResult", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.StepResult");

                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasColumnName("NumberResult_Value");

                    b.HasDiscriminator().HasValue("NumberResult");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.RadioResult", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.StepResult");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("RadioResult");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.RangeResult", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.StepResult");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("RangeResult");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.TextResult", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.StepResult");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TextResult_Answer");

                    b.HasDiscriminator().HasValue("TextResult");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.YesNoResult", b =>
                {
                    b.HasBaseType("SimpleSurveys.Shared.Models.StepResult");

                    b.Property<bool>("Result")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("YesNoResult");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Step", b =>
                {
                    b.HasOne("SimpleSurveys.Shared.Models.Survey", "Survey")
                        .WithMany("Steps")
                        .HasForeignKey("SurveyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.StepResult", b =>
                {
                    b.HasOne("SimpleSurveys.Shared.Models.Step", "Step")
                        .WithMany("Results")
                        .HasForeignKey("StepID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SimpleSurveys.Shared.Models.SurveyResult", "SurveyResult")
                        .WithMany("StepResults")
                        .HasForeignKey("SurveyResultID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Step");

                    b.Navigation("SurveyResult");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.StepResult_Value", b =>
                {
                    b.HasOne("SimpleSurveys.Shared.Models.CheckResult", null)
                        .WithMany("StepResult_Values")
                        .HasForeignKey("CheckResultID");

                    b.HasOne("SimpleSurveys.Shared.Models.DropDownResult", null)
                        .WithMany("StepResult_Values")
                        .HasForeignKey("DropDownResultID");

                    b.HasOne("SimpleSurveys.Shared.Models.StepResult", "StepResult")
                        .WithMany()
                        .HasForeignKey("StepResultID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SimpleSurveys.Shared.Models.Value", "Value")
                        .WithMany("StepResult_Values")
                        .HasForeignKey("ValueID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StepResult");

                    b.Navigation("Value");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Step_Value", b =>
                {
                    b.HasOne("SimpleSurveys.Shared.Models.Check", null)
                        .WithMany("Step_Values")
                        .HasForeignKey("CheckID");

                    b.HasOne("SimpleSurveys.Shared.Models.DropDown", null)
                        .WithMany("Step_Values")
                        .HasForeignKey("DropDownID");

                    b.HasOne("SimpleSurveys.Shared.Models.Radio", null)
                        .WithMany("Step_Values")
                        .HasForeignKey("RadioID");

                    b.HasOne("SimpleSurveys.Shared.Models.Step", "Step")
                        .WithMany()
                        .HasForeignKey("StepID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SimpleSurveys.Shared.Models.Value", "Value")
                        .WithMany("Step_Values")
                        .HasForeignKey("ValueID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Step");

                    b.Navigation("Value");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.SurveyResult", b =>
                {
                    b.HasOne("SimpleSurveys.Shared.Models.Survey", "Survey")
                        .WithMany("SurveyResults")
                        .HasForeignKey("SurveyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Step", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Survey", b =>
                {
                    b.Navigation("Steps");

                    b.Navigation("SurveyResults");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.SurveyResult", b =>
                {
                    b.Navigation("StepResults");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Value", b =>
                {
                    b.Navigation("Step_Values");

                    b.Navigation("StepResult_Values");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Check", b =>
                {
                    b.Navigation("Step_Values");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.DropDown", b =>
                {
                    b.Navigation("Step_Values");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.Radio", b =>
                {
                    b.Navigation("Step_Values");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.CheckResult", b =>
                {
                    b.Navigation("StepResult_Values");
                });

            modelBuilder.Entity("SimpleSurveys.Shared.Models.DropDownResult", b =>
                {
                    b.Navigation("StepResult_Values");
                });
#pragma warning restore 612, 618
        }
    }
}
